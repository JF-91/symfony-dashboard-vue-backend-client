@import 'variables';
@import 'mixins';

.container {
  @include container($container-width-md); // Utiliza el tamaño de contenedor medio por defecto
}

.container-xs {
  @include container($container-width-xs);
}

.container-sm {
  @include container($container-width-sm);
}

.container-lg {
  @include container($container-width-lg);
}

.container-xl {
  @include container($container-width-xl);
}

.container-fluid {
  width: 100%;
  height: auto;
  padding: $container-padding-lg;
  margin: 0;
}

.container-wrapper {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
}

.grid-container {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax($container-width-md, 1fr)); // Usa el ancho de contenedor medio por defecto
    gap: $spacing-md; // Espacio entre las columnas
}
  
.grid-container-xs {
    @include for-phone-only {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax($container-width-xs, 1fr)); // Ancho de contenedor extra pequeño
        gap: $spacing-xs; // Espacio entre las columnas
    }
}
  
.grid-container-sm {
    @include for-tablet-portrait-up {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax($container-width-sm, 1fr)); // Ancho de contenedor pequeño
        gap: $spacing-sm; // Espacio entre las columnas
    }
}
  
.grid-container-lg {
    @include for-desktop-up {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax($container-width-lg, 1fr)); // Ancho de contenedor grande
      gap: $spacing-lg; // Espacio entre las columnas
    }
}
  
.grid-container-xl {
    @include for-big-desktop-up {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax($container-width-xl, 1fr)); // Ancho de contenedor extra grande
      gap: $spacing-xl; // Espacio entre las columnas
    }
}

.flex-container {
    display: flex;

    &.has-max-height {
        height: 100vh;
        overflow: hidden;
    }
}
  
.flex-column {
    flex: 1;
    padding: $spacing-md; // Ajusta el espaciado según sea necesario

    @include for-phone-only {
        padding: $spacing-sm;
    }

    &:first-child {
        flex-basis: 60%; // La primera columna ocupa el 60% del espacio disponible
    }

    &::last-child {
        flex-basis: 40%; // La segunda columna ocupa el 40% del espacio disponible
      }
}


  .image-container {
    position: relative;
    width: 100%;
    height: 0; // Inicialmente establece la altura en 0
    padding-top: 100%; // Establece la relación de aspecto 1:1
    overflow: hidden; // Oculta cualquier parte de la imagen que se salga del contenedor
  
    &.has-ratio-16-9 {
      padding-top: 56.25%; // Establece la relación de aspecto 16:9
    }

    &.has-ratio-4-3 {
      padding-top: 75%; // Establece la relación de aspecto 4:3
    }

    &.has-max-height {
      height: 100%;  // Establece la altura en 100%
    }

    img {
      position: absolute;
      width: 100%;
      height: 100%; // La imagen ocupa todo el espacio disponible dentro del contenedor
      object-fit: cover; // Escala la imagen para cubrir todo el contenedor manteniendo la relación de aspecto
      top: 0;
      left: 0;
      border-radius: $border-radius-md; // Añade un borde redondeado
    }
  }